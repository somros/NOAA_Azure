"/bin/sh -c ln -snf /usr/share/timezone/$TZ /etc/localtime && echo $TZ > /etc/timezone"
"/bin/sh -c #(nop)  ENV TZ=America/Los_Angeles"
"/bin/sh -c Rscript -e \"devtools::install_github('Azure/doAzureParallel')\""
"/bin/sh -c Rscript -e \"devtools::install_github('Azure/rAzureBatch')\""
"/bin/sh -c Rscript -e \"devtools::install_github('Atlantis-Ecosystem-Model/ReactiveAtlantis')\""
"/bin/sh -c Rscript -e \"devtools::install_github('jporobicg/shinyrAtlantis')\""
"/bin/sh -c Rscript -e \"install.packages( c(     'digest',     'data.table',     'fields',     'devtools',     'readxl',     'rgdal',     'RNetCDF',     'httr',     'parallel',     'futures',     'doSNOW',     'raster'), dependencies = TRUE)\""
"/bin/sh -c apt-get update && apt-get -y upgrade &&    apt-get -y install rsync wget &&    wget -O azcopy.tar.gz https://aka.ms/downloadazcopylinuxrhel6 &&    tar -xzf azcopy.tar.gz &&    ./install.sh &&    rm -Rf azcopy* install.sh"
"/bin/sh -c apt-get -y --no-install-recommends install     gdal-bin     python2.7     python-pip     python-dev     python-gdal     python3-gdal     libjq-dev"
"/bin/sh -c apt-get update -qq && apt-get -y --no-install-recommends install     libhdf5-dev     libnetcdf-dev     libgdal-dev     libudunits2-dev     libxml2-dev     libproj-dev     libproj12     libssl-dev     libv8-dev     libgeos-dev     libgeo-proj4-perl     libgeos++-dev     libpoppler-cpp-dev     librsvg2-dev     libx11-dev     libprotobuf-dev     lsscsi     libcairo2     libcairo2-dev     libapparmor1     subversion     flip     autoconf     curl     gdebi-core     openssl     proj-bin     proj-data     rpm     ntp     ntpdate     htop     protobuf-compiler     mesa-common-dev     libglu1-mesa-dev     texlive-latex-extra     netcdf-bin"
"/bin/sh -c #(nop)  MAINTAINER hmorzaria@hotmail.com"
"/bin/sh -c apt-get update -qq && apt-get -y --no-install-recommends install   libxml2-dev   libcairo2-dev   libsqlite3-dev   libmariadbd-dev   libmariadb-client-lgpl-dev   libpq-dev   libssh2-1-dev   unixodbc-dev   libsasl2-dev   && install2.r --error     --deps TRUE     tidyverse     dplyr     devtools     formatR     remotes     selectr     caTools     BiocManager"
"/bin/sh -c #(nop)  CMD [\"/init\"]"
"/bin/sh -c #(nop)  VOLUME [/home/rstudio/kitematic]"
"/bin/sh -c #(nop)  EXPOSE 8787"
"/bin/sh -c #(nop) COPY file:dd6b8739ea77c8d422ef4665202b90b8a40ffc537a4d83b838fa688f01deb453 in /usr/lib/rstudio-server/bin/pam-helper "
"/bin/sh -c #(nop) COPY file:f97c04fd4ce451e9ccb45eaf34ab2a946f71999872250c2c614fd253d6743161 in /etc/rstudio/disable_auth_rserver.conf "
"/bin/sh -c #(nop) COPY file:74d8bccd0a25466ac2501910b5faeaa5d68dde2d93b500bd4e07328f84737659 in /etc/cont-init.d/add "
"/bin/sh -c #(nop) COPY file:4113f26bfec3617438c8e903625744636594ef0137fbfe590ce4d668fa985153 in /etc/cont-init.d/userconf "
"/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     file     git     libapparmor1     libcurl4-openssl-dev     libedit2     libssl-dev     lsb-release     psmisc     procps     python-setuptools     sudo     wget     libclang-dev     libclang-3.8-dev     libobjc-6-dev     libclang1-3.8     libclang-common-3.8-dev     libllvm3.8     libobjc4     libgc1c2   && if [ -z \"$RSTUDIO_VERSION\" ]; then RSTUDIO_URL=\"https://www.rstudio.org/download/latest/stable/server/debian9_64/rstudio-server-latest-amd64.deb\"; else RSTUDIO_URL=\"http://download2.rstudio.org/server/debian9/x86_64/rstudio-server-${RSTUDIO_VERSION}-amd64.deb\"; fi   && wget -q $RSTUDIO_URL   && dpkg -i rstudio-server-*-amd64.deb   && rm rstudio-server-*-amd64.deb   && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin   && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin   && git clone --recursive --branch ${PANDOC_TEMPLATES_VERSION} https://github.com/jgm/pandoc-templates   && mkdir -p /opt/pandoc/templates   && cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates*   && mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates   && apt-get clean   && rm -rf /var/lib/apt/lists/   && mkdir -p /etc/R   && echo '\\n    \\n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST     \\n# is not set since a redirect to localhost may not work depending upon     \\n# where this Docker container is running.     \\nif(is.na(Sys.getenv(\"HTTR_LOCALHOST\", unset=NA))) {     \\n  options(httr_oob_default = TRUE)     \\n}' >> /usr/local/lib/R/etc/Rprofile.site   && echo \"PATH=${PATH}\" >> /usr/local/lib/R/etc/Renviron   && useradd rstudio   && echo \"rstudio:rstudio\" | chpasswd \t&& mkdir /home/rstudio \t&& chown rstudio:rstudio /home/rstudio \t&& addgroup rstudio staff   &&  echo 'rsession-which-r=/usr/local/bin/R' >> /etc/rstudio/rserver.conf   && echo 'lock-type=advisory' >> /etc/rstudio/file-locks   && git config --system credential.helper 'cache --timeout=3600'   && git config --system push.default simple   && wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz   && tar xzf /tmp/s6-overlay-amd64.tar.gz -C /   && mkdir -p /etc/services.d/rstudio   && echo '#!/usr/bin/with-contenv bash           \\n## load /etc/environment vars first:   \t\t  \\n for line in $( cat /etc/environment ) ; do export $line ; done           \\n exec /usr/lib/rstudio-server/bin/rserver --server-daemonize 0'           > /etc/services.d/rstudio/run   && echo '#!/bin/bash           \\n rstudio-server stop'           > /etc/services.d/rstudio/finish   && mkdir -p /home/rstudio/.rstudio/monitored/user-settings   && echo 'alwaysSaveHistory=\"0\"           \\nloadRData=\"0\"           \\nsaveAction=\"0\"'           > /home/rstudio/.rstudio/monitored/user-settings/user-settings   && chown -R rstudio:rstudio /home/rstudio/.rstudio"
"/bin/sh -c #(nop)  ENV PANDOC_TEMPLATES_VERSION=2.6"
"/bin/sh -c #(nop)  ENV PATH=/usr/lib/rstudio-server/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
"/bin/sh -c #(nop)  ENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2"
"/bin/sh -c #(nop)  ENV S6_VERSION=v1.21.7.0"
"/bin/sh -c #(nop)  ARG PANDOC_TEMPLATES_VERSION"
"/bin/sh -c #(nop)  ARG S6_VERSION"
"/bin/sh -c #(nop)  ARG RSTUDIO_VERSION"
"/bin/sh -c #(nop)  CMD [\"R\"]"
"/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     bash-completion     ca-certificates     file     fonts-texgyre     g++     gfortran     gsfonts     libblas-dev     libbz2-1.0     libcurl3     libicu57     libjpeg62-turbo     libopenblas-dev     libpangocairo-1.0-0     libpcre3     libpng16-16     libreadline7     libtiff5     liblzma5     locales     make     unzip     zip     zlib1g   && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen   && locale-gen en_US.utf8   && /usr/sbin/update-locale LANG=en_US.UTF-8   && BUILDDEPS=\"curl     default-jdk     libbz2-dev     libcairo2-dev     libcurl4-openssl-dev     libpango1.0-dev     libjpeg-dev     libicu-dev     libpcre3-dev     libpng-dev     libreadline-dev     libtiff5-dev     liblzma-dev     libx11-dev     libxt-dev     perl     tcl8.6-dev     tk8.6-dev     texinfo     texlive-extra-utils     texlive-fonts-recommended     texlive-fonts-extra     texlive-latex-recommended     x11proto-core-dev     xauth     xfonts-base     xvfb     zlib1g-dev\"   && apt-get install -y --no-install-recommends $BUILDDEPS   && cd tmp/   && curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz   && tar -xf R-${R_VERSION}.tar.gz   && cd R-${R_VERSION}   && R_PAPERSIZE=letter     R_BATCHSAVE=\"--no-save --no-restore\"     R_BROWSER=xdg-open     PAGER=/usr/bin/pager     PERL=/usr/bin/perl     R_UNZIPCMD=/usr/bin/unzip     R_ZIPCMD=/usr/bin/zip     R_PRINTCMD=/usr/bin/lpr     LIBnn=lib     AWK=/usr/bin/awk     CFLAGS=\"-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g\"     CXXFLAGS=\"-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g\"   ./configure --enable-R-shlib                --enable-memory-profiling                --with-readline                --with-blas                --with-tcltk                --disable-nls                --with-recommended-packages   && make   && make install   && echo \"options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')\" >> /usr/local/lib/R/etc/Rprofile.site   && mkdir -p /usr/local/lib/R/site-library   && chown root:staff /usr/local/lib/R/site-library   && chmod g+wx /usr/local/lib/R/site-library   && echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" >> /usr/local/lib/R/etc/Renviron   && echo \"R_LIBS=\\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron   && [ -z \"$BUILD_DATE\" ] && BUILD_DATE=$(TZ=\"America/Los_Angeles\" date -I) || true   && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE}   && echo MRAN=$MRAN >> /etc/environment   && export MRAN=$MRAN   && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'libcurl')\" >> /usr/local/lib/R/etc/Rprofile.site   && Rscript -e \"install.packages(c('littler', 'docopt'), repo = '$MRAN')\"   && ln -s /usr/local/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r   && ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r   && ln -s /usr/local/lib/R/site-library/littler/bin/r /usr/local/bin/r   && cd /   && rm -rf /tmp/*   && apt-get remove --purge -y $BUILDDEPS   && apt-get autoremove -y   && apt-get autoclean -y   && rm -rf /var/lib/apt/lists/*"
"/bin/sh -c #(nop)  ENV R_VERSION=3.6.0 LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 TERM=xterm"
"/bin/sh -c #(nop)  ARG BUILD_DATE"
"/bin/sh -c #(nop)  ARG R_VERSION"
"/bin/sh -c #(nop)  LABEL org.label-schema.license=GPL-2.0 org.label-schema.vcs-url=https://github.com/rocker-org/rocker-versioned org.label-schema.vendor=Rocker Project maintainer=Carl Boettiger <cboettig@ropensci.org>"
"/bin/sh -c #(nop)  CMD [\"bash\"]"
"/bin/sh -c #(nop) ADD file:caf91edab64f988bc24766c58ee66c00311c7c921296b8e5b51d7023422a1485 in / "